name: Dart CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dart-version: ['3.0.0', '3.1.0', '3.2.0', 'stable']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: ${{ matrix.dart-version }}

    - name: Print Dart version
      run: dart --version

    - name: Install dependencies
      run: dart pub get

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: dart analyze --fatal-infos

    - name: Run tests
      run: dart test

    - name: Generate test coverage
      run: dart test --coverage=coverage

    - name: Convert coverage to LCOV
      run: dart pub global activate coverage && dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: 'stable'

    - name: Install dependencies
      run: dart pub get

    - name: Dry run publish
      run: dart pub publish --dry-run

  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        dart-version: 'stable'

    - name: Install dependencies
      run: dart pub get

    - name: Check for outdated dependencies
      run: dart pub outdated --mode=null-safety

    - name: Check package score
      run: |
        dart pub global activate pana
        dart pub global run pana --no-warning

    - name: Generate documentation
      run: |
        dart pub global activate dartdoc
        dart pub global run dartdoc --output docs/api

    - name: Deploy documentation to GitHub Pages
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/api